version: 2.1
orbs:
  android: circleci/android@2.0
jobs:
  build:
    docker:
      - image: cimg/android:2023.08
    # executor:
    #   name: android/android-machine
    #   resource-class: large
    #   tag: 2021.10.1
    # 確保路徑是相同的 可先執行pwd 
    environment: #確保自己產的keyStore所用加密法在circleci環境主機存在 
              KEYSTORE_FILE: /home/circleci/project/app/MyKeyStore/keyStore
              KEYSTORE_PASSWORD: rfe666
              KEY_ALIAS: KotlinTutorialKey
              KEY_PASSWORD: rfe666
              VERSION_NAME: ""

    steps:
      - checkout
      - run: java --version
      - run:
          name: Set execute permission for gradlew
          command: chmod +x gradlew  # 設定執行權限
      # - run: gradle --version
      - run:
          name: Set CircleCI Environment Variable
          command: |
            export VERSION_NAME=$(./gradlew getVersionName | tail -n 1)
            echo "export VERSION_NAME='${VERSION_NAME}'" >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Print CircleCI Environment Variable
          command: echo $VERSION_NAME


      # - run:
      #     name: Download Dependencies # 確保項目的依賴庫是否正確,確保在不同環境都能編譯
      #     command: ./gradlew androidDependencies
      # - save_cache: #將gradle結果暫存至circleCI快取中 如果沒有變化就不需要重新下載和解析依賴庫
      #     paths:
      #       - ~/.gradle
      #     key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      # - build-debug-apk
      # - build-debug-aab
      - run:
          name: ls app/MyKeyStore/
          command: ls app/MyKeyStore/
      - build-release-apk
      # - build-release-aab

workflows:
  version: 2
  build-apk-workflow:
    jobs:
      - build

commands:
  build-debug-apk:
    steps:
      - run:
          name: Build APK
          command: ./gradlew assembleDebug #建構debug版本apk
      - store_artifacts:
          path: app/build/outputs/apk/debug/app-debug.apk
          destination: app-debug-testName.apk

  build-debug-aab: 
    steps:
      - run:
          name: Build Debug AAB
          command: ./gradlew bundleDebug #建構debug版本aab
      
      - store_artifacts:
          path: app/build/outputs/bundle/debug/app-debug.aab
          destination: debug-app-testName.aab

 #建構release版本apk
  build-release-apk:
    steps:
      - run:
          name: Build Release APK
          command: ./gradlew assembleRelease 
              -Pandroid.injected.signing.store.file=$KEYSTORE_FILE
              -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD
              -Pandroid.injected.signing.key.alias=$KEY_ALIAS
              -Pandroid.injected.signing.key.password=$KEY_PASSWORD
      - run:
          name: ls app/build/outputs/apk/release/ 
          command: ls app/build/outputs/apk/release/       
      - store_artifacts:
          path: app/build/outputs/apk/release/app-release.apk
          destination: app-release-testName.apk

#建構release版本aab
  build-release-aab:
    steps:
      - run:
          name: Build Release AAB
          command: ./gradlew bundleRelease 
              -Pandroid.injected.signing.store.file=$KEYSTORE_FILE
              -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD
              -Pandroid.injected.signing.key.alias=$KEY_ALIAS
              -Pandroid.injected.signing.key.password=$KEY_PASSWORD
      - run:
          name: ls app/build/outputs/bundle/release/
          command: ls app/build/outputs/bundle/release       
      - store_artifacts:
          path: app/build/outputs/bundle/release/app-release.aab
          destination: app-release-${VERSION_NAME}-testName.aab
