version: 2.1

orbs:
  android: circleci/android@2.0
  # email: cinotify/email@1.2.1
  slack: circleci/slack@4.12.5
  email: circleci/email@1.0.0

jobs:
  build:
    docker:
      - image: cimg/android:2023.08
    # executor:
    #   name: android/android-machine
    #   resource-class: large
    #   tag: 2021.10.1
    # 確保路徑是相同的 可先執行pwd 
    environment: #確保自己產的keyStore所用加密法在circleci環境主機存在 
              KEYSTORE_FILE: /home/circleci/project/app/MyKeyStore/keyStore #確保keyStore不會外流 ex:git觀看權限
              KEYSTORE_PASSWORD: rfe666
              KEY_ALIAS: KotlinTutorialKey
              KEY_PASSWORD: rfe666
              VERSION_NAME: 1.6.5
              MY_VERSION_NAME: ""

    steps:
      - checkout
      - run: java --version
      - run:
          name: Set execute permission for gradlew
          command: chmod +x gradlew  # 設定執行權限
      
      # 抓app版本名稱 輸出MY_VERSION_NAME 作為變數
      - run:
          name: Set versionName
          command: |
            myVersionName=$(cat app/build.gradle | grep versionName | cut -d'=' -f2 | tr -d " " | tr -d "versionName")
            echo "MY_VERSION_NAME=$myVersionName" >> $BASH_ENV

      # 印出推送的目標分支 
      # - run:
      #     name: print now branch
      #     command: echo "${CIRCLE_BRANCH}"

      # - run: gradle --version
      # - run:
      #     name: Set CircleCI Environment Variable
      #     command: |
      #       export VERSION_NAME=$(./gradlew getVersionName | tail -n 1)
      #       echo "export VERSION_NAME='${VERSION_NAME}'" >> $BASH_ENV
      #       source $BASH_ENV

      # - run:
      #     name: Download Dependencies # 確保項目的依賴庫是否正確,確保在不同環境都能編譯
      #     command: ./gradlew androidDependencies
      # - save_cache: #將gradle結果暫存至circleCI快取中 如果沒有變化就不需要重新下載和解析依賴庫
      #     paths:
      #       - ~/.gradle
      #     key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

      # - build-debug-apk
      # - build-debug-aab
      - build-release-apk
      # - build-release-aab

workflows:
  version: 2
  build-apk-workflow:
    jobs:
      - build

commands:
  build-debug-apk:
    steps:
      - run:
          name: Build APK
          command: ./gradlew assembleDebug #建構debug版本apk
      - store_artifacts:
          path: app/build/outputs/apk/debug/app-debug.apk
          destination: app-debug-testName.apk

  build-debug-aab: 
    steps:
      - run:
          name: Build Debug AAB
          command: ./gradlew bundleDebug #建構debug版本aab
      
      - store_artifacts:
          path: app/build/outputs/bundle/debug/app-debug.aab
          destination: debug-app-testName.aab

 #建構release版本apk
  build-release-apk:
    steps:
      - run:
          name: Build Release APK
          command: ./gradlew assembleRelease 
              -Pandroid.injected.signing.store.file=$KEYSTORE_FILE
              -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD
              -Pandroid.injected.signing.key.alias=$KEY_ALIAS
              -Pandroid.injected.signing.key.password=$KEY_PASSWORD
      - run:
          name: ls app/build/outputs/apk/release/ 
          command: ls app/build/outputs/apk/release/
      - run:
          name: Rename APK
          command: mv app/build/outputs/apk/release/app-release.apk app/build/outputs/apk/release/app-release-${MY_VERSION_NAME}.apk
      - run:
          name: ls app/build/outputs/apk/release/
          command: ls app/build/outputs/apk/release/  
      - store_artifacts:
          path: app/build/outputs/apk/release/
          #destination: "app-release-1.5.3.apk"

      - run:
          name: Show version
          command: echo "$MY_VERSION_NAME"

      # - email/send:
          # body: 我們的app版本："${MY_VERSION_NAME}" 出版了 連結網址-> https://google.com
          # subject: APK包版信
          # to: alan.lee@gomaji.com #,s990611@kimo.com

      - email/notify:
          to: alan.lee@gomaji.com
          subject: "Build successful for branch $CIRCLE_BRANCH"
          body: |
            The build was successful for branch $CIRCLE_BRANCH.
            Version: $MY_VERSION_NAME
          from: "CircleCI <circleci@example.com>"

      # - run:
      #     post:
      #       - mkdir $CIRCLE_ARTIFACTS/apks
      #       - curl -L -o -gdrive "https://drive.google.com/drive/u/0/folders/1tvjEVYgBeRJipFVMslda3jdPIlrEquqD"; chmod 755 gdrive
      #       - ./gdrive --refresh-token "refresh_token_value" upload --parent "parent_id" app/build/outputs/apk/release/app-release.apk

      # - mailer-orb/mail:
      #     body: |-
      #       Sample Mail
      #       Regards,
      #       Circle CI 
      #     from: test@tt.ty
      #     subject: Example mail from mailer-orb
      #     to: alan.lee@gomaji.com


      # - run: #測試丟apk到drive 
      #     name: Upload APK to Google Drive
      #     command: |
      #       ACCESS_TOKEN=ya29.a0AfB_byC6kmq7D7SZn-s3R09gOHr90huIxlUDXRB2zoRrxWzQmlVlgAXSbwyYxCRkZ9RVC7X5ByLvXdmVJ5sbdoXgECNZoanQl7s49L354yv_vItURuHHGZQO5L4kJsMTyYqSUOnwMqM-j_62HGcbWEXI8gJNT4unGttmmwaCgYKAUcSARASFQHsvYlslhw4PQH1ncIX3hEM6pnEqg0173
      #       FILE_ID="1UDfduQx7jPtw_j0zaVwJiBCR9jt4QV1q"
      #       APK_PATH="app-release-myName.apk"
            
      #       # 建構 HTTP 請求並上傳 APK
      #       curl -X POST \
      #         -H "Authorization: Bearer $ACCESS_TOKEN" \
      #         -F "metadata={name:'app-release-myName.apk'};type=application/json;charset=UTF-8" \
      #         -F "file=@$APK_PATH;type=application/octet-stream" \
      #         "https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart"

#建構release版本aab 
  build-release-aab:
    steps:
      - run:
          name: Build Release AAB
          command: ./gradlew bundleRelease 
              -Pandroid.injected.signing.store.file=$KEYSTORE_FILE
              -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD
              -Pandroid.injected.signing.key.alias=$KEY_ALIAS
              -Pandroid.injected.signing.key.password=$KEY_PASSWORD
      - run:
          name: ls app/build/outputs/bundle/release/
          command: ls app/build/outputs/bundle/release       
      - store_artifacts:
          path: app/build/outputs/bundle/release/app-release.aab
          destination: app-release-testName.aab

      # - run:
      #     name: create token
      #     command: firebase login:ci
